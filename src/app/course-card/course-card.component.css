/* per riferirsi all'elemento host devo utilizzare la keyword :host */
/* questo ci permette di collegare tutte le proprietà css ad un solo codice univoco che angular crea per identificare il componente */
/* ad esempio codice _nghost-ng-c01, tutti gli elementi all'interno del template del componente che avranno un codice _ngcontent-ng-c01 vuol dire che si riferiscono a quell'host element  */

:host {
  /* course-card { */
  display: block;
}

/* voglio creare una proprietà css che venga applicata al componente ma che dipenda da una classe passata non al componente direttamente ma all'esterno, ad esempio al suo parent  */
/* creo una classe salmon-theme che applico in app.component.html */
/* per fare in modo che questa classe diventi specifica per il mio componente (altrimenti essendo passata dall'esterno non verrebbe vista) utilizzo la feature :host-context(selettore classe) */

:host-context(.salmon-theme) .course-card {
  background: lightsalmon;
}

/* qui course-card è una classe non l'elemento html */
.course-card {
  margin-bottom: 40px;
  text-align: center;
  border-radius: 4px;
  padding: 20px 0;
  box-shadow: 0 1px 16px 0 rgba(0, 0, 0, 0.2), 0 2px 8px 0 rgba(0, 0, 0, 0.14),
    0 4px 8px -1px rgba(0, 0, 0, 0.12);
}

.course-card .course-title {
  font-size: 27px;
  font-weight: bold;
}

/* qui c'è un problema perchè questa classe non è stata applicata nel componente, ma in app.component.html perchè questo contenuto viene passato tramite <ng-content> che renderizza codice html nel content del tag del componente, quindi tramite content projection */
/* quindi il codice html renderizzato non riferisce al codice _nghost del componente ma a quello di app-root e quindi il css non viene applicato */
/* se spostassi la propretà css .course.description in app.component.css funzionerebbe */
/* per farlo funzionare qui dobbiamo bypassare il meccanismo di View Encapsulation, in modo da applicare questa classe anche se l'elemento non fa parte del componente */
/* utilizzo la feature ::ng-deep */
/*sto dicendo ad angular che tutto quello che viene dopo la feature ::ng-deep non deve essere reso specifico per il modello del componente */

/* .course-card .course-description { */
.course-card ::ng-deep .course-description {
  max-width: 360px;
  margin: 0 auto;
  margin-top: 15px;
  user-select: none;
}

.course-card img {
  border-radius: 4px;
  margin-top: 10px;
}

:host.is-first {
  /* course-card.is-first { */
  border-top: 2px solid grey;
  padding-top: 20px;
}

:host.is-last {
  /* course-card.is-last { */
  border-bottom: 2px solid grey;
  padding-top: 20px;
}

:host.is-even {
  /* course-card.is-even { */
  background: lightgray;
}

:host.is-odd {
  /* course-card.is-odd { */
  background: lightcyan;
}

.course-card.beginner {
  background: lightsalmon;
}
